<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.feelwith.business.data.dao.ActivityactionlogMapper" >
  <resultMap id="BaseResultMap" type="me.feelwith.business.data.dao.entity.Activityactionlog" >
    <id column="ActivityId" property="activityId" jdbcType="INTEGER" />
    <result column="Likes" property="likes" jdbcType="INTEGER" />
    <result column="LikeDate" property="likeDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ActivityId, Likes, LikeDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="me.feelwith.business.data.dao.entity.ActivityactionlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activityactionlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activityactionlog
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activityactionlog
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="me.feelwith.business.data.dao.entity.ActivityactionlogExample" >
    delete from activityactionlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.feelwith.business.data.dao.entity.Activityactionlog" >
    insert into activityactionlog (ActivityId, Likes, LikeDate
      )
    values (#{activityId,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, #{likeDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.feelwith.business.data.dao.entity.Activityactionlog" >
    insert into activityactionlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        ActivityId,
      </if>
      <if test="likes != null" >
        Likes,
      </if>
      <if test="likeDate != null" >
        LikeDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="likeDate != null" >
        #{likeDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.feelwith.business.data.dao.entity.ActivityactionlogExample" resultType="java.lang.Integer" >
    select count(*) from activityactionlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activityactionlog
    <set >
      <if test="record.activityId != null" >
        ActivityId = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.likes != null" >
        Likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.likeDate != null" >
        LikeDate = #{record.likeDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activityactionlog
    set ActivityId = #{record.activityId,jdbcType=INTEGER},
      Likes = #{record.likes,jdbcType=INTEGER},
      LikeDate = #{record.likeDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.feelwith.business.data.dao.entity.Activityactionlog" >
    update activityactionlog
    <set >
      <if test="likes != null" >
        Likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="likeDate != null" >
        LikeDate = #{likeDate,jdbcType=DATE},
      </if>
    </set>
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.feelwith.business.data.dao.entity.Activityactionlog" >
    update activityactionlog
    set Likes = #{likes,jdbcType=INTEGER},
      LikeDate = #{likeDate,jdbcType=DATE}
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </update>
</mapper>