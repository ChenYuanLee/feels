<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.feelwith.business.data.dao.ActivityMapper" >
  <resultMap id="BaseResultMap" type="me.feelwith.business.data.dao.entity.Activity" >
    <id column="ActivityId" property="activityId" jdbcType="INTEGER" />
    <result column="UserId" property="userId" jdbcType="INTEGER" />
    <result column="Description" property="description" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="Likes" property="likes" jdbcType="INTEGER" />
    <result column="RecentLikes" property="recentLikes" jdbcType="INTEGER" />
    <result column="Comments" property="comments" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ActivityId, UserId, Description, CreateTime, Likes, RecentLikes, Comments
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="me.feelwith.business.data.dao.entity.ActivityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="me.feelwith.business.data.dao.entity.ActivityExample" >
    delete from activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.feelwith.business.data.dao.entity.Activity" >
    insert into activity (ActivityId, UserId, Description, 
      CreateTime, Likes, RecentLikes, 
      Comments)
    values (#{activityId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{likes,jdbcType=INTEGER}, #{recentLikes,jdbcType=INTEGER}, 
      #{comments,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="me.feelwith.business.data.dao.entity.Activity" >
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        ActivityId,
      </if>
      <if test="userId != null" >
        UserId,
      </if>
      <if test="description != null" >
        Description,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="likes != null" >
        Likes,
      </if>
      <if test="recentLikes != null" >
        RecentLikes,
      </if>
      <if test="comments != null" >
        Comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="recentLikes != null" >
        #{recentLikes,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.feelwith.business.data.dao.entity.ActivityExample" resultType="java.lang.Integer" >
    select count(*) from activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity
    <set >
      <if test="record.activityId != null" >
        ActivityId = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        UserId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likes != null" >
        Likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.recentLikes != null" >
        RecentLikes = #{record.recentLikes,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null" >
        Comments = #{record.comments,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity
    set ActivityId = #{record.activityId,jdbcType=INTEGER},
      UserId = #{record.userId,jdbcType=INTEGER},
      Description = #{record.description,jdbcType=VARCHAR},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      Likes = #{record.likes,jdbcType=INTEGER},
      RecentLikes = #{record.recentLikes,jdbcType=INTEGER},
      Comments = #{record.comments,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.feelwith.business.data.dao.entity.Activity" >
    update activity
    <set >
      <if test="userId != null" >
        UserId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null" >
        Likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="recentLikes != null" >
        RecentLikes = #{recentLikes,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        Comments = #{comments,jdbcType=INTEGER},
      </if>
    </set>
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.feelwith.business.data.dao.entity.Activity" >
    update activity
    set UserId = #{userId,jdbcType=INTEGER},
      Description = #{description,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      Likes = #{likes,jdbcType=INTEGER},
      RecentLikes = #{recentLikes,jdbcType=INTEGER},
      Comments = #{comments,jdbcType=INTEGER}
    where ActivityId = #{activityId,jdbcType=INTEGER}
  </update>
</mapper>